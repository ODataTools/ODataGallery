{
  "name": "modulus",
  "description": "The command line interface for deploying applications to the Modulus hosting platform.",
  "keywords": [
    "cli",
    "modulus",
    "hosting",
    "cloud hosting",
    "paas",
    "platform-as-a-service",
    "deployment",
    "deploy",
    "command line",
    "modulusio"
  ],
  "version": "0.1.15",
  "author": {
    "name": "Modulus",
    "email": "feedback@modulus.io"
  },
  "maintainers": [
    {
      "name": "zwigby",
      "email": "ckey@paranoidferret.com"
    },
    {
      "name": "busyrich",
      "email": "richard@modulus.com"
    },
    {
      "name": "inconceivableduck",
      "email": "brandon@modulus.io"
    },
    {
      "name": "fiveisprime",
      "email": "matt@modulus.io"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/onmodulus/modulus-cli.git"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/onmodulus/modulus-cli/blob/master/LICENSE-MIT"
    }
  ],
  "dependencies": {
    "commander-plus": "0.0.x",
    "colors": "0.6.x",
    "prompt": "0.2.x",
    "async": "0.1.x",
    "pkginfo": "0.2.x",
    "walkr": "0.0.x",
    "archiver": "0.4.x",
    "request": "2.27.x",
    "node-uuid": "1.3.3",
    "progress": "0.1.x",
    "underscore": "1.4.x",
    "fstream-ignore": "0.0.x"
  },
  "devDependencies": {
    "mocha": "1.5.x",
    "express": "3.0.x"
  },
  "main": "./lib/modulus",
  "bin": {
    "modulus": "./bin/modulus"
  },
  "preferGlobal": true,
  "engines": {
    "node": ">= 0.8.0"
  },
  "readme": "<pre>\n __    __   ______   _____    __  __   __       __  __   ______\n/\\ \"-./  \\ /\\  __ \\ /\\  __-. /\\ \\/\\ \\ /\\ \\     /\\ \\/\\ \\ /\\  ___\\\n\\ \\ \\-./\\ \\\\ \\ \\/\\ \\\\ \\ \\/\\ \\\\ \\ \\_\\ \\\\ \\ \\____\\ \\ \\_\\ \\\\ \\___  \\\n \\ \\_\\ \\ \\_\\\\ \\_____\\\\ \\____- \\ \\_____\\\\ \\_____\\\\ \\_____\\\\/\\_____\\\n  \\/_/  \\/_/ \\/_____/ \\/____/  \\/_____/ \\/_____/ \\/_____/ \\/_____/\n</pre>\n      \nThis is the offical command line tool for <a href=\"https://modulus.io/\" target=\"_blank\">Modulus.io</a>. Use it to create and manage your Modulus.io projects. For more detailed descriptions of commands available, check out <a href=\"https://modulus.io/codex/cli/reference\" target=\"_blank\">the Modulus codex</a>.\n\n[![NPM](https://nodei.co/npm/modulus.png)](https://nodei.co/npm/modulus/)\n\n##Installing\nTo install the Modulus CLI, simply NPM install it globally.\n\n    $ npm install -g modulus\n\n##Usage\n\nUsing the CLI is easy.\n\n<pre>\nUsage: modulus &lt;command&gt; &lt;param1&gt; &lt;param2&gt;\n</pre>\n\nAt any point you can run the *help* command to get a full list of commands and how to use them.\n\nYou can also send feedback directly to Modulus using the *contact* command. Make sure your message is enclosed in double quotes (eg. “Your message”).\n\n    $ modulus contact \"This is feedback from the CLI!\"\n    Welcome to Modulus\n    You are logged in as spiderman\n    [√] Feedback sent. Thank you for the message.\n\n##Creating an Account\n\nTo start, you may need an account. Using the *signup* command, you can quickly create an account to get things rolling. It will prompt you for a few required pieces of information then set up an account.\n\n    $ modulus signup\n    Welcome to Modulus\n    In order to sign up we a few pieces of information.\n    [?] Choose a username: spiderman\n    [?] Enter a valid email: parker@example.com\n    [?] Enter a password:\n    [√] User spiderman has been created successfully.\n\n    You should receive an email at parker@example.com with more information.\n\nOnce you have an account, you need to log in. Running the *login* command will prompt you for your Modulus credentials or if you have linked your GitHub account in the web portal (under account settings) you can use the *--github* flag to login using your GitHub credentials. This keeps a session open so you can run commands under your account and the session will not be closed unless you run the *logout* command or log in with a different account.\n\n    $ modulus login\n    Welcome to Modulus\n    [?] Enter your username or email: spiderman\n    [?] Enter your password:\n    [√] Signed in as user spiderman\n\n##Project Management\n\nOnce logged in, you are ready to create a project. This is done with the *project create* command, and all that is required is a name.\n\n    $ modulus project create\n    Welcome to Modulus\n    You are logged in as spiderman\n    [?] Enter a project name: Lizard Locator\n    [√] New project Lizard Locator created.\n\nTo deploy an application to your new project, you can use either the *project deploy* command or its shorter sidekick, *deploy*. This command will take all the contents of your current directory, zip them up and deploy them. Once the deploy has started, the progress will be displayed. When the deploy completes, you have a running application on Modulus. You can redeploy a new version of the project at any time using the same process.\n\n    $ cd my/project/directory\n    $ modulus deploy\n    Welcome to Modulus\n    You are logged in as spiderman\n    [?] Are you sure you want to use project Lizard Locator? (yes) yes\n    Compressing project...\n    2.9 KB written\n    Uploading project...\n    Upload progress [===================] 100%\n    Deploying Project...\n    INFO: Attaching persistent storage.\n    INFO: Found package.json file: /package.json\n    INFO: Node version not specifed in package.json, using latest stable version.\n    INFO: Initializing Node v0.10.13\n    INFO: Running npm install.\n    INFO: Registry: http://registry.npmjs.org\n    npm http GET http://registry.npmjs.org/express\n    npm http 304 http://registry.npmjs.org/express\n    npm http GET http://registry.npmjs.org/qs\n    npm http GET http://registry.npmjs.org/connect\n    npm http GET http://registry.npmjs.org/mime/1.2.4\n    npm http GET http://registry.npmjs.org/mkdirp/0.3.0\n    npm http 304 http://registry.npmjs.org/qs\n    npm http 304 http://registry.npmjs.org/connect\n    npm http 304 http://registry.npmjs.org/mime/1.2.4\n    npm http 304 http://registry.npmjs.org/mkdirp/0.3.0\n    npm http GET http://registry.npmjs.org/mime/-/mime-1.2.4.tgz\n    npm http GET http://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz\n    npm http GET http://registry.npmjs.org/qs/-/qs-0.4.2.tgz\n    npm http 200 http://registry.npmjs.org/mime/-/mime-1.2.4.tgz\n    npm http 200 http://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz\n    npm http 200 http://registry.npmjs.org/qs/-/qs-0.4.2.tgz\n    npm http GET http://registry.npmjs.org/formidable\n    npm http 304 http://registry.npmjs.org/formidable\n    express@2.5.11 node_modules/express\n    ├── qs@0.4.2\n    ├── mime@1.2.4\n    ├── mkdirp@0.3.0\n    └── connect@1.9.2 (formidable@1.0.14)\n    INFO: Main file found: /app.js\n    INFO: Starting application.\n    Express server started on port 8080\n    [2013-08-22T17:53:42.245Z] Application initialized with pid 11010\n    [√] Lizard Locator running at lizard-locator-895.onmodulus.net\n\nThe project's logs will be streamed in real-time during a deploy. You should see some information about Modulus' activity, as well as the NPM install process. In future deploy examples, these logs will be replaced for \"...\".\n\nYou can also pass in a directory as a command argument, if you do not want to deploy the current directory.\n\n    $ modulus deploy my/project/directory\n    Welcome to Modulus\n    You are logged in as spiderman\n    [?] Are you sure you want to use project Lizard Locator? (yes) yes\n    Compressing project...\n    2.9 KB written\n    Uploading project...\n    Upload progress [===================] 100%\n    Deploying Project...\n    ...\n    [√] Lizard Locator running at lizard-locator-895.onmodulus.net\n\nIf you know which project you want to deploy to, you can use the *-p* option and provide the name of the project you would like to deploy to.\n\n    $ modulus deploy -p \"Lizard Locator\" my/project/directory\n    Welcome to Modulus\n    You are logged in as spiderman\n    Compressing project...\n    2.9 KB written\n    Uploading project...\n    Upload progress [===================] 100%\n    Deploying Project...\n    ...\n    [√] Lizard Locator running at lizard-locator-895.onmodulus.net\n\n##Environment Variables\n\nThe CLI also provides an easy way to manage a project’s environment variables. You can start with listing your current variables with the *env list* command.\n\n    $ modulus env list\n    Welcome to Modulus\n    You are logged in as spiderman\n    [?] Are you sure you want to use project Lizard Locator? (yes) yes\n    Project Lizard Locator Environment Variables\n    NODE_ENV = production\n\nTo add a new variable, use the *env set* command. It takes two parameters, name and value. This command can also be used to change the value of an existing variable.\n\n    $ modulus env set DB_AUTH 12345\n    Welcome to Modulus\n    You are logged in as spiderman\n    [?] Are you sure you want to use project Lizard Locator? (yes) yes\n    Setting DB_AUTH for project Lizard Locator\n    [√] Successfully set environment variable.\n\nIf you have no need for a variable anymore, you can provide the *env delete* command with a name and it will be removed from the project.\n\n    $ modulus env delete DB_AUTH\n    Welcome to Modulus\n    You are logged in as spiderman\n    [?] Are you sure you want to use project Lizard Locator? (yes) yes\n    Deleting DB_AUTH for project Lizard Locator\n    [√] Successfully deleted variable DB_AUTH from project Lizard Locator\n\nAt any time, if you want to view the value of a single variable, use the *env get* command. It takes a name parameter and will display the value of the variable of the name you specify.\n\n##Logs\n\nIn times when you need to check up on your projects, you can view the project's logs. This is done with the *project logs* command, which supports the *-p* option.\n\n    $ ./bin/modulus project logs -p \"Lizard Locator\"\n    Welcome to Modulus\n    You are logged in as spiderman\n    INFO: Attaching persistent storage.\n    INFO: Found package.json file: /package.json\n    INFO: Node version not specifed in package.json, using latest stable version.\n    INFO: Initializing Node v0.10.13\n    INFO: Running npm install.\n    INFO: Registry: http://registry.npmjs.org\n    npm http GET http://registry.npmjs.org/express\n    npm http 304 http://registry.npmjs.org/express\n    npm http GET http://registry.npmjs.org/qs\n    npm http GET http://registry.npmjs.org/connect\n    npm http GET http://registry.npmjs.org/mime/1.2.4\n    npm http GET http://registry.npmjs.org/mkdirp/0.3.0\n    npm http 304 http://registry.npmjs.org/qs\n    npm http 304 http://registry.npmjs.org/connect\n    npm http 304 http://registry.npmjs.org/mime/1.2.4\n    npm http 304 http://registry.npmjs.org/mkdirp/0.3.0\n    npm http GET http://registry.npmjs.org/mime/-/mime-1.2.4.tgz\n    npm http GET http://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz\n    npm http GET http://registry.npmjs.org/qs/-/qs-0.4.2.tgz\n    npm http 200 http://registry.npmjs.org/mime/-/mime-1.2.4.tgz\n    npm http 200 http://registry.npmjs.org/mkdirp/-/mkdirp-0.3.0.tgz\n    npm http 200 http://registry.npmjs.org/qs/-/qs-0.4.2.tgz\n    npm http GET http://registry.npmjs.org/formidable\n    npm http 304 http://registry.npmjs.org/formidable\n    express@2.5.11 node_modules/express\n    ├── qs@0.4.2\n    ├── mime@1.2.4\n    ├── mkdirp@0.3.0\n    └── connect@1.9.2 (formidable@1.0.14)\n    INFO: Main file found: /app.js\n    INFO: Starting application.\n    Express server started on port 8080\n    [2013-08-22T17:53:42.245Z] Application initialized with pid 11010\n\n    [✓] Logs successfully retrieved.\n\nWhile these logs are not streamed directly to the CLI, the logs themselves are updated in real-time, so anytime you retrieve them they are current.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/onmodulus/modulus-cli/issues"
  },
  "_id": "modulus@0.1.15",
  "dist": {
    "shasum": "9e30d0fda7915ad1aabdaf6eba45f4a9750706ae"
  },
  "_from": "modulus@",
  "_resolved": "https://registry.npmjs.org/modulus/-/modulus-0.1.15.tgz"
}
